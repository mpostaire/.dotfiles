#compdef youtube-dl

_arguments -s \
    '(-h --help)'{-h,--help}'[Print this help text and exit]' \
    '--version[Print program version and exit]' \
    '(-U --update)'{-U,--update}'[Update this program to latest version]' \
    '(-i --ignore-errors)'{-i,--ignore-errors}'[Continue on download errors, for example to skip unavailable videos in a playlist]' \
    '--abort-on-error[Abort downloading of further videos (in the playlist or the command line) if an error occurs]' \
    '--dump-user-agent[Display the current browser identification]' \
    '--list-extractors[List all supported extractors]' \
    '--extractor-descriptions[Output descriptions of all supported extractors]' \
    '--force-generic-extractor[Force extraction to use the generic extractor]' \
    '--default-search[Use this prefix for unqualified URLs.]:PREFIX:' \
    '--ignore-config[Do not read configuration files.]' \
    '--config-location[Location of the configuration file; either the path to the config or its containing directory.]:PATH:_files' \
    '--flat-playlist[Do not extract the videos of a playlist, only list them.]' \
    '--mark-watched[Mark videos watched (YouTube only)]' \
    '--no-mark-watched[Do not mark videos watched (YouTube only)]' \
    '--no-color[Do not emit color codes in output]' \
    '--proxy[Use the specified HTTP/HTTPS/SOCKS proxy]:URL:' \
    '--socket-timeout[Time to wait before giving up, in seconds]:SECONDS:' \
    '--source-address[Client-side IP address to bind to]:IP:' \
    '(-4 --force-ipv4)'{-4,--force-ipv4}'[Make all connections via IPv4]' \
    '(-6 --force-ipv6)'{-6,--force-ipv6}'[Make all connections via IPv6]' \
    '--geo-verification-proxy[Use this proxy to verify the IP address for some geo-restricted sites.]:URL:' \
    '--geo-bypass[Bypass geographic restriction via faking X-Forwarded-For HTTP header]' \
    '--no-geo-bypass[Do not bypass geographic restriction via faking X-Forwarded-For HTTP header]' \
    '--geo-bypass-country[Force bypass geographic restriction with explicitly provided two-letter ISO 3166-2 country code]:CODE:' \
    '--geo-bypass-ip-block[Force bypass geographic restriction with explicitly provided IP block in CIDR notation]:IP_BLOCK:' \
    '--playlist-start[Playlist video to start at (default is 1)]:NUMBER:' \
    '--playlist-end[Playlist video to end at (default is 1)]:NUMBER:' \
    '--playlist-items[Playlist video items to download.]:ITEM_SPEC:' \
    '--match-title[Download only matching titles (regex or caseless sub-string)]:REGEX:' \
    '--reject-title[Skip download for matching titles (regex or caseless sub-string)]:REGEX:' \
    '--max-downloads[Abort after downloading NUMBER files]:NUMBER:' \
    '--min-filesize[Do not download any videos smaller than SIZE (e.g. 50k or 44.6m)]:SIZE:' \
    '--max-filesize[Do not download any videos larger than SIZE (e.g. 50k or 44.6m)]:SIZE:' \
    '--date[Download only videos uploaded in this date]:DATE:' \
    '--datebefore[Download only videos uploaded on or before this date (i.e. inclusive)]:DATE:' \
    '--dateafter[Download only videos uploaded on or after this date (i.e. inclusive)]:DATE:' \
    '--min-views[Do not download any videos with less than COUNT views]:COUNT:' \
    '--max-views[Do not download any videos with more than COUNT views]:COUNT:' \
    '--match-filter[Generic video filter]:FILTER' \
    '--no-playlist[Download only the video, if the URL refers to a video and a playlist]' \
    '--yes-playlist[Download the playlist, if the URL refers to a video and a playlist]' \
    '--age-limit[Download only videos suitable for the given age]:YEARS:' \
    '--download-archive[Download only videos not listed in the archive file]:FILE:_files' \
    '--include-ads[Download advertisements as well (experimental)]' \
    '(-r --limit-rate)'{-r,--limit-rate}'[Maximum download rate in bytes per second (e.g. 50K or 4.2M)]:RATE:' \
    '(-R --retries)'{-R,--retries}'[Number of retries (default is 10), or "infinite"]:RETRIES:' \
    '--fragment-retries[Number of retries for a fragment (default is 10), or "infinite" (DASH, hlsnative and ISM)]:RETRIES:' \
    '--skip-unavailable-fragments[Skip unavailable fragments (DASH, hlsnative and ISM)]' \
    '--abort-on-unavailable-fragment[Abort downloading when some fragment is not available]' \
    '--keep-fragments[Keep downloaded fragments on disk after downloading is finished; fragments are erased by default]' \
    '--buffer-size[Size of download buffer (e.g. 1024 or 16K) (default is 1024)]:SIZE:' \
    '--no-resize-buffer[Do not automatically adjust the buffer size]' \
    '--http-chunk-size[Size of a chunk for chunk-based HTTP downloading (e.g. 10485760 or 10M)]:SIZE:' \
    '--playlist-reverse[Download playlist videos in reverse order]' \
    '--playlist-random[Download playlist videos in random order]' \
    '--xattr-set-filesize[Set file xattribute ytdl.filesize with expected file size]' \
    '--hls-prefer-native[Use the native HLS downloader instead of ffmpeg]' \
    '--hls-prefer-ffmpeg[Use ffmpeg instead of the native HLS downloader]' \
    '--hls-use-mpegts[Use the mpegts container for HLS  videos, allowing to play the video  while downloading (some players may not  be able to play it)]' \
    '--external-downloader[Use the specified external downloader]:COMMAND:_files' \
    '--external-downloader-args[Give these arguments to the external downloader]:ARGS:' \
    '(-a --batch-file)'{-a,--batch-file}"[File containing URLs to download ('-' for stdin), one URL per line]:FILE:_files" \
    '--id[Use only video ID in file name]' \
    '(-o --output)'{-o,--output}'[Output filename template]:TEMPLATE:' \
    '--output-na-placeholder[Placeholder value for unavailable meta fields in output filename template]:PLACEHOLDER:' \
    '--autonumber-start[Specify the start value for %(autonumber)s]:NUMBER:' \
    '--restrict-filenames[Restrict filenames to only ASCII characters, and avoid "&" and spaces in filenames]' \
    '(-w --no-overwrites)'{-w,--no-overwrites}'[Do not overwrite files]' \
    '(-c --continue)'{-c,--continue}'[Force resume of partially downloaded files]' \
    '--no-continue[Do not resume partially downloaded files (restart from beginning)]' \
    '--no-part[Do not use .part files - write directly into output file]' \
    '--no-mtime[Do not use the Last-modified header to set the file modification time]' \
    '--write-description[Write video description to a .description file]' \
    '--write-info-json[Write video metadata to a .info.json file]' \
    '--write-annotations[Write video annotations to a .annotations.xml file]' \
    '--load-info-json[JSON file containing the video information (created with the "--write- info-json" option)]:FILE:_files' \
    '--cookies[File to read cookies from and dump cookie jar in]:FILE:_files' \
    '--cache-dir[Location in the filesystem where youtube-dl can store some downloaded information permanently]:DIR:_directories' \
    '--no-cache-dir[Disable filesystem caching]' \
    '--rm-cache-dir[Delete all filesystem cache files]' \
    '--write-thumbnail[Write thumbnail image to disk]' \
    '--write-all-thumbnails[>rite all thumbnail image formats to disk]' \
    '--list-thumbnails[Simulate and list all available thumbnail formats]' \
    '(-q --quiet)'{-q,--quiet}'[Activate quiet mode]' \
    '--no-warnings[Ignore warnings]' \
    '(-s --simulate)'{-s,--simulate}'[Do not download the video and do not write anything to disk]' \
    '--skip-download[Do not download the video]' \
    '(-g --get-url)'{-g,--get-url}'[Simulate, quiet but print URL]' \
    '(-e --get-title)'{-e,--get-title}'[Simulate, quiet but print title]' \
    '--get-id[Simulate, quiet but print id]' \
    '--get-thumbnail[Simulate, quiet but print thumbnail URL]' \
    '--get-description[Simulate, quiet but print video description]' \
    '--get-duration[Simulate, quiet but print video length]' \
    '--get-filename[Simulate, quiet but print output filename]' \
    '--get-format[Simulate, quiet but print output format]' \
    '(-j --dump-json)'{-j,--dump-json}'[Simulate, quiet but print JSON information]' \
    '(-J --dump-single-json)'{-J,--dump-single-json}'[Simulate, quiet but print JSON information for each command-line argument]' \
    '--print-json[Be quiet and print the video information as JSON (video is still being downloaded)]' \
    '--newline[Output progress bar as new lines]' \
    '--no-progress[Do not print progress bar]' \
    '--console-title[Display progress in console titlebar]' \
    '(-v --verbose)'{-v,--verbose}'[Print various debugging information]' \
    '--dump-pages[Print downloaded pages encoded using base64 to debug problems (very verbose)]' \
    '--write-pages[Write downloaded intermediary pages to files in the current directory to debug problems]' \
    '--print-traffic[Display sent and read HTTP traffic]' \
    '(-C --call-home)'{-C,--call-home}'[Contact the youtube-dl server for debugging]' \
    '--no-call-home[Do NOT contact the youtube-dl server for debugging]' \
    '--encoding[Force the specified encoding (experimental)]:ENCODING:' \
    '--no-check-certificate[Suppress HTTPS certificate validation]' \
    '--prefer-insecure[Use an unencrypted connection to retrieve information about the video (Currently supported only for YouTube)]' \
    '--user-agent[Specify a custom user agent]:UA:' \
    '--referer[Specify a custom referer, use if the video access is restricted to one domain]:URL:' \
    "*--add-header[Specify a custom HTTP header and its value, separated by a colon ':']:FIELD_VALUE:" \
    '--bidi-workaround[Work around terminals that lack bidirectional text support]' \
    '--sleep-interval[Number of seconds to sleep before each download when used alone or a lower bound of a range for randomized sleep before each download (minimum possible number of seconds to sleep) when used along with --max-sleep-interval]:SECONDS:' \
    '--max-sleep-interval[Upper bound of a range for randomized sleep before each download (maximum possible number of seconds to sleep). Must only be used along with --min- sleep-interval]:SECONDS:' \
    '(-f --format)'{-f,--format}'[Video format code, see the "FORMAT SELECTION" for all the info]:FORMAT:' \
    '--all-formats[Download all available video formats]' \
    '--prefer-free-formats[Prefer free video formats unless a specific one is requested]' \
    '(-F --list-formats)'{-F,--list-formats}'[List all available formats of requested videos]' \
    '--youtube-skip-dash-manifest[Do not download the DASH manifests and related data on YouTube videos]' \
    '--merge-output-format[If a merge is required (e.g. bestvideo+bestaudio), output to given container format.]:FORMAT:' \
    '--write-sub[Write subtitle file]' \
    '--write-auto-sub[Write automatically generated subtitle (YouTube only)]' \
    '--all-subs[Download all the available subtitles of the video]' \
    '--list-subs[List all available subtitles for the video]' \
    '--sub-format[subtitle format, accepts formats]:FORMAT:(srt ass best)' \
    '--sub-lang[Languages of the subtitles to download (optional) separated by commas, use --list-subs for available language tags]:LANGS:' \
    '(-u --username)'{-u,--username}'[Login with this account ID]:USERNAME:' \
    '(-p --password)'{-p,--password}'[Account password]:PASSWORD:' \
    '(-2 --twofactor)'{-2,--twofactor}'[Two-factor authentication code]:TWOFACTOR:' \
    '(-n --netrc)'{-n,--netrc}'[Use .netrc authentication data]' \
    '--video-password[Video password (vimeo, youku)]:PASSWORD:' \
    '--ap-mso[Adobe Pass multiple-system operator (TV provider) identifier, use --ap-list-mso for a list of available MSOs]:MSO:' \
    '--ap-username[Multiple-system operator account login]:USERNAME:' \
    '--ap-password[Multiple-system operator account password]:PASSWORD:' \
    '--ap-list-mso[List all supported multiple-system operators]' \
    '(-x --extract-audio)'{-x,--extract-audio}'[Convert video files to audio-only files (requires ffmpeg/avconv and ffprobe/avprobe)]' \
    '--audio-format[Specify audio format]:FORMAT:(best aac flac mp3 m4a opus vorbis wav)' \
    '--audio-quality[Specify ffmpeg/avconv audio quality, insert a value between 0 (better) and 9 (worse) for VBR or a specific bitrate like 128K (default 5)]:QUALITY:(0 1 2 3 4 5 6 7 8 9)' \
    '--recode-video[Encode the video to another format if necessary]:FORMAT:(mp4 flv ogg webm mkv avi)' \
    '--postprocessor-args[Give these arguments to the postprocessor]:ARGS:' \
    '(-k --keep-video)'{-k,--keep-video}'[Keep the video file on disk after the post-processing; the video is erased by default]' \
    '--no-post-overwrites[Do not overwrite post-processed files; the post-processed files are overwritten by default]' \
    '--embed-subs[Embed subtitles in the video (only for mp4, webm and mkv videos)]' \
    '--embed-thumbnail[Embed thumbnail in the audio as cover art]' \
    '--add-metadata[Write metadata to the video file]' \
    '--metadata-from-title[Parse additional metadata like song title / artist from the video title]:FORMAT:' \
    "--xattrs[Write metadata to the video file's xattrs (using dublin core and xdg standards)]" \
    '--fixup[Automatically correct known faults of the file]:POLICY:(never warn detect_or_warn)' \
    '--prefer-avconv[Prefer avconv over ffmpeg for running the postprocessors]' \
    '--prefer-ffmpeg[Prefer ffmpeg over avconv for running the postprocessors (default)]' \
    '--ffmpeg-location[Location of the ffmpeg/avconv binary; either the path to the binary or its containing directory]:PATH:_files' \
    '--exec[Execute a command on the file after downloading and post-processing]:CMD:' \
    '--convert-subs[Convert the subtitles to other format]:FORMAT:(srt ass vtt lrc)' \
    '*:filename:_files'
